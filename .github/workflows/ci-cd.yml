name: Build para ECR

on:
  workflow_dispatch:  # Permite disparar o workflow manualmente pela interface do GitHub
    inputs:
      branch:
        description: 'Branch a ser construída'  # Adiciona uma opção de input para escolher a branch
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Defina a região AWS diretamente aqui
      AWS_REGION: 'us-east-2'  # Substitua pela sua região
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Chave de Acesso AWS
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Chave Secreta AWS

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Passo 3: Verificação da variável AWS_REGION
      - name: Verify AWS_REGION
        run: |
          echo "AWS_REGION is set to $AWS_REGION"  # Variável de ambiente do sistema

      # Passo 4: Logar no ECR (Elastic Container Registry)
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
          env:
          AWS_REGION: ${{ env.AWS_REGION }}  # Passando a região como variável de ambiente
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Chave de Acesso AWS
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Chave Secreta AWS

      # Passo 5: Construir e enviar a imagem Docker para o ECR
      - name: Build and push Docker image
        run: |
          REPOSITORY_URI=043309320203.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/meu-repositorio-docker
          IMAGE_TAG=${GITHUB_SHA}
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG
